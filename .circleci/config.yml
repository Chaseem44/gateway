version: 2.1

executors:
  machine_image:
    machine:
      image: ubuntu-1604:201903-01

  go1_13:
    working_directory: /code
    docker:
      - image: golang:1.13.4
        environment:
          GOPATH: /go
          CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
          CIRCLE_TEST_REPORTS: /tmp/circleci-test-results

commands:
  go_setup:
    steps:
      - checkout
      - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      - go_mod_download
  go_mod_download:
    steps:
      - restore_cache:
          key: v1-go-mod-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}
      - run:
          name: go mod download
          command: |
            [[ -d /go/pkg/mod/cache ]] && exit 0
            go mod download
      - save_cache:
          key: v1-go-mod-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}
          paths:
            - /go/pkg/mod

jobs:
  lint:
    resource_class: xlarge
    executor: go1_13
    steps:
      - go_setup
      - run: "curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.21.0"
      - run: golangci-lint run

  test:
    resource_class: xlarge
    executor: go1_13
    steps:
      - go_setup
      - run: |
          python -m json.tool < exampleGateway.conf > /dev/null
          go test -v -covermode atomic -race -timeout 120s -cpu 4 -parallel 8 -coverprofile ./coverage.out ./...
          ! go tool cover -func coverage.out | grep -v 100.0%

  deploy:
    executor: machine_image
    environment:
      DOCKER_PUSH: 1
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS quay.io
      - run: ./scripts/deploy.sh

workflows:
  version: 2
  buildtest-and-deploy:
    jobs:
      - lint
      - test
      - deploy:
          filters:
            branches:
              only:
                - release
                - /feature.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
