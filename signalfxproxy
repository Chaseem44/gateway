#!/bin/sh
### BEGIN INIT INFO
# Provides:
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start signalfxproxy
# Description:       Enable signalfxproxy provided by daemon.
### END INIT INFO

dir="/opt/sfproxy"
user="root"
configfile="/etc/sfdbconfig.conf"
logdir="/var/log/sfproxy"
binary="/opt/sfproxy/bin/signalfxproxy"

nohup="nohup "
cmd="$binary -configfile $configfile -log_dir $logdir"

name=$(basename "$0")
pid_file="/var/run/$name.pid"
stdout_log="/var/log/$name.log"

get_pid() {
    cat "$pid_file"
}

is_running() {
    [ -f "$pid_file" ] && ps "$(get_pid)" > /dev/null 2>&1
}

case "$1" in
    start-foreground | start)
    if [ "$1" = "start-foreground" ]; then
        nohup=""
    fi
    if [ ! -f $binary ]; then
        echo "$name not installed.  No such file $binary"
       exit 1
    fi
    if [ ! -f $configfile ]; then
        echo "Unable to find config file $configfile"
        exit 1
    fi
    if is_running; then
        echo "Already started"
    else
        echo "Starting $name"
        cd "$dir"
        if [ ! -d "$logdir" ]; then
            mkdir -p $logdir
        fi
        sudo -u "$user" "$nohup" "$cmd"  2>&1 | sudo tee -a "$stdout_log" &
        echo "$!" > "$pid_file"
        if ! is_running; then
            echo "Unable to start, see $stdout_log"
            exit 1
        fi
    fi
    ;;
    stop)
    if is_running; then
        echo "Stopping $name.."
        kill "$(get_pid)"
        for _ in 1 2 3 4 5 6 7 8 9 10
        do
            if ! is_running; then
                break
            fi

            echo "."
            sleep 1
        done
        echo

        if is_running; then
            echo "Not stopped; may still be shutting down or shutdown may have failed"
            exit 1
        else
            echo "Stopped"
            if [ -f "$pid_file" ]; then
                rm "$pid_file"
            fi
        fi
    else
        echo "Not running"
    fi
    ;;
    restart)
    $0 stop
    if is_running; then
        echo "Unable to stop, will not attempt to start"
        exit 1
    fi
    $0 start
    ;;
    status)
    if is_running; then
        echo "Running"
    else
        echo "Stopped"
        exit 1
    fi
    ;;
    *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
    ;;
esac

exit 0
